name: tests
on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, closed]
    branches:
    - main
  push:
    branches:
    - main
jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' || github.event.pull_request.action != 'closed' || github.event.pull_request.merged == true)
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Run golanci Linter
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest

    - name: Run the Tests
      run: |
        go test ./... -race -coverprofile coverage.out
        go tool cover -func coverage.out

    - name: Install gocov
      run: go install github.com/axw/gocov/gocov@latest

    - uses: paambaati/codeclimate-action@v2.7.1
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      with:
        coverageCommand: gocov convert coverage.out

  security:
    name: Security
    needs: validate
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' || github.event.pull_request.action != 'closed' || github.event.pull_request.merged == true)
    steps:
    - uses: actions/checkout@v3

    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        args: ./...

  release:
    name: Release
    needs: security
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' || github.event.pull_request.merged == true)
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: paulhatch/semantic-version@v4.0.2
      with:
        tag_prefix: v
        major_pattern: breaking
        minor_pattern: feat
        format: ${major}.${minor}.${patch}
